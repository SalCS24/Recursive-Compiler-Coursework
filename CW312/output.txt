312START

312FILE Programs Folder/program0
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <WhileStatement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 8
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 9
312END <ArgumentList>
312TOKEN ) on line 9
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 9
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 10
312END <ArgumentList>
312TOKEN ) on line 10
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 11
312END <StatementPart>
312TOKEN EOF on line 13
312SUCCESS

312FILE Programs Folder/program1
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <WhileStatement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 8
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 9
312END <ArgumentList>
312TOKEN ) on line 9
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 9
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 10
312END <ArgumentList>
312TOKEN ) on line 10
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 11
312END <StatementPart>
312TOKEN EOF on line 12
312SUCCESS

312FILE Programs Folder/program2
312BEGIN <StatementPart>
Compilation Exception
Line 1: Unexpected token 'begim' (IDENTIFIER)
    Parse path:
        at <StatementPart>

312FILE Programs Folder/program3
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <IfStatement>
312TOKEN if on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN then on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 6
312TOKEN := on line 6
312TOKEN STRING 'the result is ' on line 6
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 6
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 7
312TOKEN IDENTIFIER 'put' on line 7
312TOKEN ( on line 7
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 7
312END <ArgumentList>
312TOKEN ) on line 7
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 8
312TOKEN IDENTIFIER 'put' on line 8
312TOKEN ( on line 8
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 8
312END <ArgumentList>
312TOKEN ) on line 8
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 9
Compilation Exception
Line 11: Unexpected token '' (EOF)
    Parse path:
        at <Conditonal Operator>
        at <Conditional Statement>
        at <IfStatement>
        at <Statement>
        at <StatementList>
        at <StatementPart>

312FILE Programs Folder/program4
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 6
312BEGIN <Statement>
Compilation Exception
Line 7: Unexpected token 'end' (end)
    Parse path:
        at <Statement>
        at <StatementList>
        at <Conditonal Operator>
        at <Conditional Statement>
        at <WhileStatement>
        at <Statement>
        at <StatementList>
        at <StatementPart>

312FILE Programs Folder/program5
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
Compilation Exception
Line 7: Unexpected token ';' (;)
    Parse path:
        at <Conditonal Operator>
        at <Conditional Statement>
        at <WhileStatement>
        at <Statement>
        at <StatementList>
        at <StatementPart>

312FILE Programs Folder/program6
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'a' on line 5
312END <Factor>
312END <Term>
312TOKEN - on line 5
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'b' on line 5
312END <Factor>
312END <Term>
312TOKEN + on line 5
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'c' on line 5
312END <Factor>
312END <Term>
312TOKEN - on line 5
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'd' on line 5
312END <Factor>
312END <Term>
312TOKEN + on line 5
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'e' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'a' on line 6
312END <Factor>
312TOKEN * on line 6
312BEGIN <Factor>
312TOKEN IDENTIFIER 'b' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'c' on line 6
312END <Factor>
312TOKEN / on line 6
312BEGIN <Factor>
312TOKEN IDENTIFIER 'd' on line 6
312END <Factor>
312END <Term>
312TOKEN + on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'e' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <WhileStatement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 8
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 9
312END <ArgumentList>
312TOKEN ) on line 9
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 9
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 10
312END <ArgumentList>
312TOKEN ) on line 10
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 11
312END <StatementPart>
312TOKEN EOF on line 13
312SUCCESS

312FILE Programs Folder/program7
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
Compilation Exception
Line 4: Unexpected token 'else' (else)
    Parse path:
        at <Statement>
        at <StatementList>
        at <StatementPart>

312FILE Programs Folder/program8
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <WhileStatement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 8
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 9
312END <ArgumentList>
312TOKEN ) on line 9
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 9
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 10
312END <ArgumentList>
312TOKEN ) on line 10
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 11
312END <StatementPart>
Compilation Exception
Line 12: Unexpected token 'call' (call)
    Parse path:
        at <Conditonal Operator>
        at <Conditional Statement>
        at <WhileStatement>
        at <Statement>
        at <StatementList>
        at <StatementPart>

312FILE Programs Folder/program9
312BEGIN <StatementPart>
312TOKEN begin on line 0
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 1
312TOKEN IDENTIFIER 'get' on line 1
312TOKEN ( on line 1
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 1
312END <ArgumentList>
312TOKEN ) on line 1
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 1
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x3' on line 2
312TOKEN := on line 2
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '0' on line 2
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <ForStatement>
312TOKEN for on line 3
312TOKEN ( on line 3
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312TOKEN ; on line 3
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x2' on line 3
312BEGIN <Conditonal Operator>
312TOKEN < on line 3
312END <Conditional Operator>
312TOKEN IDENTIFIER 'x1' on line 3
312END <Conditional Statement>
312TOKEN ; on line 3
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 3
312END <Factor>
312END <Term>
312TOKEN + on line 3
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312TOKEN ) on line 3
312TOKEN do on line 3
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 4
312TOKEN IDENTIFIER 'put' on line 4
312TOKEN ( on line 4
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 4
312TOKEN , on line 4
312TOKEN IDENTIFIER 'x2' on line 4
312TOKEN , on line 4
312TOKEN IDENTIFIER 'x3' on line 4
312END <ArgumentList>
312TOKEN ) on line 4
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 4
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x3' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x3' on line 5
312END <Factor>
312END <Term>
312TOKEN + on line 5
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 6
312TOKEN loop on line 6
312END <ForStatement>
312END <Statement>
312TOKEN ; on line 6
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 7
312TOKEN IDENTIFIER 'put' on line 7
312TOKEN ( on line 7
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x3' on line 7
312END <ArgumentList>
312TOKEN ) on line 7
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 8
312END <StatementPart>
312TOKEN EOF on line 9
312SUCCESS

312FILE Programs Folder/program10
312BEGIN <StatementPart>
312TOKEN begin on line 0
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'get' on line 0
312TOKEN ( on line 0
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 0
312END <ArgumentList>
312TOKEN ) on line 0
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 0
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x3' on line 0
312TOKEN := on line 0
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '0' on line 0
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 0
312BEGIN <Statement>
312BEGIN <ForStatement>
312TOKEN for on line 0
312TOKEN ( on line 0
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN := on line 0
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 0
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312TOKEN ; on line 0
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x2' on line 0
312BEGIN <Conditonal Operator>
312TOKEN < on line 0
312END <Conditional Operator>
312TOKEN IDENTIFIER 'x1' on line 0
312END <Conditional Statement>
312TOKEN ; on line 0
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN := on line 0
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 0
312END <Factor>
312END <Term>
312TOKEN + on line 0
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 0
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312TOKEN ) on line 0
312TOKEN do on line 0
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'put' on line 0
312TOKEN ( on line 0
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 0
312TOKEN , on line 0
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN , on line 0
312TOKEN IDENTIFIER 'x3' on line 0
312END <ArgumentList>
312TOKEN ) on line 0
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 0
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x3' on line 0
312TOKEN := on line 0
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x3' on line 0
312END <Factor>
312END <Term>
312TOKEN + on line 0
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 0
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 0
312TOKEN loop on line 0
312END <ForStatement>
312END <Statement>
312TOKEN ; on line 0
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'put' on line 0
312TOKEN ( on line 0
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x3' on line 0
312END <ArgumentList>
312TOKEN ) on line 0
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 0
312END <StatementPart>
312TOKEN EOF on line 1
312SUCCESS

312FILE Programs Folder/program11
312BEGIN <StatementPart>
312TOKEN begin on line 1
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 2
312END <ArgumentList>
312TOKEN ) on line 2
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 2
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 3
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 3
312BEGIN <Statement>
312BEGIN <WhileStatement>
312TOKEN while on line 4
312BEGIN <Conditional Statement>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <Conditonal Operator>
312TOKEN != on line 4
312END <Conditional Operator>
312TOKEN NUMBER '0' on line 4
312END <Conditional Statement>
312TOKEN loop on line 4
312BEGIN <StatementList>
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <Factor>
312TOKEN * on line 5
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 5
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <Factor>
312END <Term>
312TOKEN - on line 6
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN NUMBER '1' on line 6
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <WhileStatement>
312END <Statement>
312TOKEN ; on line 7
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 8
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'text' on line 9
312END <ArgumentList>
312TOKEN ) on line 9
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 9
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x1' on line 10
312END <ArgumentList>
312TOKEN ) on line 10
312END <Procedure Statement>
312END <Statement>
312TOKEN ; on line 10
312BEGIN <Statement>
312BEGIN <AssignmentStatement>
312TOKEN IDENTIFIER 'x2' on line 11
312TOKEN := on line 11
312BEGIN <Expression>
312BEGIN <Term>
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x2' on line 11
312END <Factor>
312TOKEN % on line 11
312BEGIN <Factor>
312TOKEN IDENTIFIER 'x1' on line 11
312END <Factor>
312TOKEN / on line 11
312BEGIN <Factor>
312TOKEN NUMBER '2' on line 11
312END <Factor>
312END <Term>
312END <Expression>
312END <AssignmentStatement>
312END <Statement>
312TOKEN ; on line 11
312BEGIN <Statement>
312BEGIN <Procedure Statement>
312TOKEN call on line 12
312TOKEN IDENTIFIER 'put' on line 12
312TOKEN ( on line 12
312BEGIN <ArgumentList>
312TOKEN IDENTIFIER 'x2' on line 12
312END <ArgumentList>
312TOKEN ) on line 12
312END <Procedure Statement>
312END <Statement>
312END <StatementList>
312TOKEN end on line 13
312END <StatementPart>
312TOKEN EOF on line 15
312SUCCESS
Programs Folder/program12 does not exist

312FINISH
